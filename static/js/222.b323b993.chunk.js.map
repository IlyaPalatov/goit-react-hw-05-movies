{"version":3,"file":"static/js/222.b323b993.chunk.js","mappings":"sSAIMA,E,OAAMC,EAAAA,OAAa,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QALY,sCASHC,EAAiB,mCAAG,6GAENL,EAAIM,IAAI,wBAFF,cAEvBC,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,sCAKvB,IAAIC,MAAM,mCAAqC,KAAMC,SAL9B,yDAAH,qDASjBC,EAAY,mCAAG,WAAOC,GAAP,gGAEDb,EAAIM,IAAI,gBAAiB,CAC9CH,OAAQ,CACNW,MAAOD,KAJa,cAElBN,EAFkB,yBAOjBA,EAASC,KAAKC,SAPG,sCASlB,IAAIC,MAAM,2BAA6B,KAAMC,SAT3B,yDAAH,sDAaZI,EAAe,mCAAG,WAAOC,GAAP,gGAEJhB,EAAIM,IAAJ,iBAAkBU,IAFd,cAErBT,EAFqB,yBAGpBA,EAASC,MAHW,sCAKrB,IAAIE,MAAM,iCAAmC,KAAMC,SAL9B,yDAAH,sDASfM,EAAe,mCAAG,WAAOD,GAAP,gGAEJhB,EAAIM,IAAJ,iBAAkBU,EAAlB,aAFI,cAErBT,EAFqB,yBAGpBA,EAASC,KAAKU,MAHM,sCAKrB,IAAIR,MAAM,iCAAmC,KAAMC,SAL9B,yDAAH,sDASfQ,EAAe,mCAAG,WAAOH,GAAP,gGAEJhB,EAAIM,IAAJ,iBAAkBU,EAAlB,aAFI,cAErBT,EAFqB,yBAGpBA,EAASC,KAAKC,SAHM,sCAKrB,IAAIC,MAAM,iCAAmC,KAAMC,SAL9B,yDAAH,qD,qEClB5B,UA7Ba,SAAC,GAAiB,IAAfK,EAAc,EAAdA,QACd,GAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOF,EAAP,KAAaG,EAAb,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACRL,EAAAA,EAAAA,IAAgBD,GACbO,MAAK,SAACL,GACLG,EAAQH,EACT,IACAM,OAAM,SAACC,GACNC,QAAQD,MAAM,gCAAiCA,EAChD,GACJ,GAAE,CAACT,KAGF,4BACE,iCACCE,EAAKS,KAAI,SAACC,GAAD,OACR,4BACE,gBACEC,IAAG,0CAAqCD,EAAME,cAC9CC,IAAKH,EAAMI,QAEb,uBAAIJ,EAAMI,SALFJ,EAAMK,GADR,MAWf,C","sources":["components/Api.jsx","components/Routes/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '972977f56f8bd7231d09e6b66c83a88b'; \n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await api.get('/trending/movie/week'); \n    return response.data.results;\n  } catch (error) {\n    throw new Error('Error fetching trending movies: ' + error.message);\n  }\n};\n\nexport const searchMovies = async (searchTerm) => {\n  try {\n    const response = await api.get('/search/movie', {\n      params: {\n        query: searchTerm,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    throw new Error('Error searching movies: ' + error.message);\n  }\n};\n\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await api.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching movie details: ' + error.message);\n  }\n};\n\nexport const getMovieCredits = async (movieId) => {\n  try {\n    const response = await api.get(`/movie/${movieId}/credits`);\n    return response.data.cast;\n  } catch (error) {\n    throw new Error('Error fetching movie credits: ' + error.message);\n  }\n};\n\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await api.get(`/movie/${movieId}/reviews`);\n    return response.data.results;\n  } catch (error) {\n    throw new Error('Error fetching movie reviews: ' + error.message);\n  }\n};\n","// Cast.jsx\nimport React, { useEffect, useState } from 'react';\nimport { getMovieCredits } from '../Api';\n\nconst Cast = ({ movieId }) => {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getMovieCredits(movieId)\n      .then((cast) => {\n        setCast(cast);\n      })\n      .catch((error) => {\n        console.error('Error fetching movie credits:', error);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <h1>Cast</h1>\n      {cast.map((actor) => (\n        <div key={actor.id}>\n          <img\n            src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n            alt={actor.name}\n          />\n          <p>{actor.name}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Cast;"],"names":["api","axios","baseURL","params","api_key","getTrendingMovies","get","response","data","results","Error","message","searchMovies","searchTerm","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","useState","setCast","useEffect","then","catch","error","console","map","actor","src","profile_path","alt","name","id"],"sourceRoot":""}