{"version":3,"file":"static/js/686.3e6355c4.chunk.js","mappings":"sSAIMA,E,OAAMC,EAAAA,OAAa,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QALY,sCASHC,EAAiB,mCAAG,6GAENL,EAAIM,IAAI,wBAFF,cAEvBC,EAFuB,yBAGtBA,EAASC,KAAKC,SAHQ,sCAKvB,IAAIC,MAAM,mCAAqC,KAAMC,SAL9B,yDAAH,qDASjBC,EAAY,mCAAG,WAAOC,GAAP,gGAEDb,EAAIM,IAAI,gBAAiB,CAC9CH,OAAQ,CACNW,MAAOD,KAJa,cAElBN,EAFkB,yBAOjBA,EAASC,KAAKC,SAPG,sCASlB,IAAIC,MAAM,2BAA6B,KAAMC,SAT3B,yDAAH,sDAaZI,EAAe,mCAAG,WAAOC,GAAP,gGAEJhB,EAAIM,IAAJ,iBAAkBU,IAFd,cAErBT,EAFqB,yBAGpBA,EAASC,MAHW,sCAKrB,IAAIE,MAAM,iCAAmC,KAAMC,SAL9B,yDAAH,sDASfM,EAAe,mCAAG,WAAOD,GAAP,gGAEJhB,EAAIM,IAAJ,iBAAkBU,EAAlB,aAFI,cAErBT,EAFqB,yBAGpBA,EAASC,KAAKU,MAHM,sCAKrB,IAAIR,MAAM,iCAAmC,KAAMC,SAL9B,yDAAH,sDASfQ,EAAe,mCAAG,WAAOH,GAAP,gGAEJhB,EAAIM,IAAJ,iBAAkBU,EAAlB,aAFI,cAErBT,EAFqB,yBAGpBA,EAASC,KAAKC,SAHM,sCAKrB,IAAIC,MAAM,iCAAmC,KAAMC,SAL9B,yDAAH,qD,6ECf5B,UAhCa,WACX,OAA4CS,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACRpB,EAAAA,EAAAA,MACGqB,MAAK,SAACC,GACLL,EAAkBK,EACnB,IACAC,OAAM,SAACL,GACNC,EAAS,mCAAqCD,EAAMZ,QACrD,GACJ,GAAE,IAECY,GACK,qCAAaA,MAIpB,4BACE,6CACA,wBACGF,EAAeQ,KAAI,SAACC,GAAD,OAClB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME,GADG,QAQ3B,C","sources":["components/Api.jsx","components/Routes/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '972977f56f8bd7231d09e6b66c83a88b'; \n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await api.get('/trending/movie/week'); \n    return response.data.results;\n  } catch (error) {\n    throw new Error('Error fetching trending movies: ' + error.message);\n  }\n};\n\nexport const searchMovies = async (searchTerm) => {\n  try {\n    const response = await api.get('/search/movie', {\n      params: {\n        query: searchTerm,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    throw new Error('Error searching movies: ' + error.message);\n  }\n};\n\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await api.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching movie details: ' + error.message);\n  }\n};\n\nexport const getMovieCredits = async (movieId) => {\n  try {\n    const response = await api.get(`/movie/${movieId}/credits`);\n    return response.data.cast;\n  } catch (error) {\n    throw new Error('Error fetching movie credits: ' + error.message);\n  }\n};\n\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await api.get(`/movie/${movieId}/reviews`);\n    return response.data.results;\n  } catch (error) {\n    throw new Error('Error fetching movie reviews: ' + error.message);\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getTrendingMovies } from '../Api';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    getTrendingMovies()\n      .then((movies) => {\n        setTrendingMovies(movies);\n      })\n      .catch((error) => {\n        setError('Error fetching trending movies: ' + error.message);\n      });\n  }, []);\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      <h1>Trending Movies</h1>\n      <ul>\n        {trendingMovies.map((movie) => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["api","axios","baseURL","params","api_key","getTrendingMovies","get","response","data","results","Error","message","searchMovies","searchTerm","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","useState","trendingMovies","setTrendingMovies","error","setError","useEffect","then","movies","catch","map","movie","to","id","title"],"sourceRoot":""}