{"version":3,"file":"static/js/221.8af53730.chunk.js","mappings":"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","sources":["components/Api.jsx","components/Routes/Cast.jsx","components/Routes/MovieDetails.jsx","components/Routes/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '972977f56f8bd7231d09e6b66c83a88b'; \n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await api.get('/trending/movie/week'); \n    return response.data.results;\n  } catch (error) {\n    throw new Error('Error fetching trending movies: ' + error.message);\n  }\n};\n\nexport const searchMovies = async (searchTerm) => {\n  try {\n    const response = await api.get('/search/movie', {\n      params: {\n        query: searchTerm,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    throw new Error('Error searching movies: ' + error.message);\n  }\n};\n\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await api.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    throw new Error('Error fetching movie details: ' + error.message);\n  }\n};\n\nexport const getMovieCredits = async (movieId) => {\n  try {\n    const response = await api.get(`/movie/${movieId}/credits`);\n    return response.data.cast;\n  } catch (error) {\n    throw new Error('Error fetching movie credits: ' + error.message);\n  }\n};\n\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await api.get(`/movie/${movieId}/reviews`);\n    return response.data.results;\n  } catch (error) {\n    throw new Error('Error fetching movie reviews: ' + error.message);\n  }\n};\n","import React from 'react';\n\nconst Cast = ({ cast }) => {\n  return (\n    <div>\n      {cast.map((actor) => (\n        <div key={actor.id}>\n          <img\n            src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n            alt={actor.name}\n          />\n          <p>{actor.name}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Cast;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getMovieDetails, getMovieCredits } from '../Api';\nimport Cast from './Cast';\nimport Reviews from './Reviews';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [cast, setCast] = useState([]);\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n\n  const navigate = useNavigate(); \n\n  useEffect(() => {\n    getMovieDetails(movieId)\n      .then((movie) => {\n        setMovieDetails(movie);\n      })\n      .catch((error) => {\n        console.error('Error fetching movie details:', error);\n      });\n\n    getMovieCredits(movieId)\n      .then((cast) => {\n        setCast(cast);\n      })\n      .catch((error) => {\n        console.error('Error fetching cast:', error);\n      });\n  }, [movieId]);\n\n  const handleShowCast = () => {\n    setShowCast(true);\n    setShowReviews(false);\n    navigate(`/movies/${movieId}/cast`);\n  };\n\n  const handleShowReviews = () => {\n    setShowReviews(true);\n    setShowCast(false);\n    navigate(`/movies/${movieId}/reviews`); \n  };\n\n  return (\n    <div>\n      <h1>{movieDetails.title}</h1>\n      <img\n        src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`}\n        alt={movieDetails.title}\n      />\n      <p>{movieDetails.overview}</p>\n\n      <button onClick={handleShowCast}>Cast</button>\n      <button onClick={handleShowReviews}>Reviews</button>\n\n      {showCast && <Cast cast={cast} />}\n      {showReviews && <Reviews movieId={movieId} />}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React, { useEffect, useState } from 'react';\nimport { getMovieReviews } from '../Api'; \n\nconst Reviews = ({ movieId }) => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then((response) => {\n        setReviews(response);\n      })\n      .catch((error) => {\n        console.error('Error fetching movie reviews:', error);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <h1>Reviews</h1>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map((review) => (\n            <li key={review.id}>\n              <p>{review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>Ooops! Nothing was found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["api","axios","baseURL","params","api_key","getTrendingMovies","get","response","data","results","Error","message","searchMovies","searchTerm","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","map","actor","src","profile_path","alt","name","id","useParams","useState","movieDetails","setMovieDetails","setCast","showCast","setShowCast","showReviews","setShowReviews","navigate","useNavigate","useEffect","then","movie","catch","error","console","title","poster_path","overview","onClick","reviews","setReviews","length","review","author","content"],"sourceRoot":""}